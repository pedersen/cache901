# -*- coding: utf8 -*-
## File autogenerated by SQLAutoCode
## see http://code.google.com/p/sqlautocode/

from sqlalchemy import *
from sqlalchemy.types import *
from sqlalchemy.ext.declarative import declarative_base

from sqlalchemy import create_engine
engine = create_engine('sqlite:////home/marvin/Cache901/Cache901.sqlite', echo=True)

from sqlalchemy.orm import scoped_session, sessionmaker
maker = sessionmaker(autoflush=True, autocommit=False)

DBSession = scoped_session(maker)

DeclarativeBase = declarative_base(bind=engine)
DBSession.configure(bind=engine)
metadata = DeclarativeBase.metadata


class Accounts(DeclarativeBase):
    __tablename__ = 'accounts'
    
    accountid = Column(Integer, primary_key=True)
    sitename = Column(UnicodeText(), primary_key=False)
    username = Column(UnicodeText(), primary_key=False)
    password = Column(UnicodeText(), primary_key=False)
    isteam = Column(Integer, primary_key=False)
    ispremium = Column(Integer, primary_key=False)


class AltCoords(DeclarativeBase):
    __tablename__ =  'alt_coords'
    cache_id = Column(Integer, primary_key=True)
    sequence_num = Column(Integer, primary_key=True)
    name = Column(UnicodeText(), primary_key=False)
    Column(u'lat', UnicodeText(), primary_key=False)
    Column(u'lon', UnicodeText(), primary_key=False)
    Column(u'setdefault', Integer(), primary_key=False)
Index(u'alt_coords_cid_seq', AltCoords.cache_id, AltCoords.sequence_num, unique=False)


class Attributes(DeclarativeBase):
    __tablename__ =  'attributes'
    cache_id = Column(Integer, primary_key=True)
    attribute = Column(UnicodeText(), primary_key=False)


class CacheDay(DeclarativeBase):
    __tablename__ =  'cacheday'
    dayname = Column(UnicodeText(), primary_key=True)
    cache_id = Column(Integer, primary_key=True)
    cache_type = Column(Integer, primary_key=False)
    cache_order = Column(Integer, primary_key=False)
Index(u'cacheday_name', CacheDay.dayname, unique=False)


class CacheDayNames(DeclarativeBase):
    __tablename__ =  'cacheday_names'
    dayname = Column(UnicodeText(), primary_key=True)


class Caches(DeclarativeBase):
    __tablename__ =  'caches'
    cache_id = Column(Integer, primary_key=True)
    catid = Column(Integer, primary_key=False)
    name = Column(Unicode(), primary_key=False)
    lat= Column(Numeric(precision=None, scale=None, asdecimal=True), primary_key=False)
    lon= Column(Numeric(precision=None, scale=None, asdecimal=True), primary_key=False)
    url = Column(Unicode(), primary_key=False)
    url_name = Column(Unicode(), primary_key=False)
    url_desc = Column(Unicode(), primary_key=False)
    sym = Column(Unicode(), primary_key=False)
    type = Column(Unicode(), primary_key=False)
    available = Column(Integer, primary_key=False)
    archived = Column(Integer, primary_key=False)
    placed_by = Column(Unicode(), primary_key=False)
    owner_id = Column(Integer, primary_key=False)
    owner_name = Column(Unicode(), primary_key=False)
    container = Column(Unicode(), primary_key=False)
    difficulty= Column(Numeric(precision=None, scale=None, asdecimal=True), primary_key=False)
    terrain= Column(Numeric(precision=None, scale=None, asdecimal=True), primary_key=False)
    country = Column(Unicode(), primary_key=False)
    state = Column(Unicode(), primary_key=False)
    short_desc = Column(Unicode(), primary_key=False)
    short_desc_html = Column(Integer, primary_key=False)
    long_desc = Column(Unicode(), primary_key=False)
    long_desc_html = Column(Integer, primary_key=False)
    hidden = Column(Integer, primary_key=False)
Index(u'caches_url_name', Caches.url_name, unique=0)
Index(u'caches_name', Caches.name, unique=0)


class Categories(DeclarativeBase):
    __tablename__ = 'categories'
    catid = Column(Integer, primary_key=True)
    catname = Column(Unicode(), primary_key=False)


class EmailSources(DeclarativeBase):
    __tablename__ = 'emailsources'
    emailid = Column(Integer, primary_key=True)
    svrtype = Column(Unicode(), primary_key=False)
    svrname = Column(Unicode(), primary_key=False)
    svruser = Column(Unicode(), primary_key=False)
    svrpass = Column(Unicode(), primary_key=False)
    usessl = Column(Integer, primary_key=False)
    deffolder = Column(Unicode(), primary_key=False)


class GpxFolders(DeclarativeBase):
    __tablename__ = 'gpxfolders'
    foldername = Column(Unicode(), primary_key=True)


class Hints(DeclarativeBase):
    __tablename__ = 'hints'
    cache_id = Column(Integer, primary_key=True)
    hint = Column(Unicode(), primary_key=False)


class Locations(DeclarativeBase):
    __tablename__ = 'locations'
    wpt_id = Column(Integer, primary_key=True)
    loc_type = Column(Integer, primary_key=False)
    refers_to = Column(Integer, primary_key=False)
    name = Column(Unicode(), primary_key=False)
    desc = Column(Unicode(), primary_key=False)
    comment = Column(Unicode(), primary_key=False)
    lat= Column(Numeric(precision=None, scale=None, asdecimal=True), primary_key=False)
    lon= Column(Numeric(precision=None, scale=None, asdecimal=True), primary_key=False)
    hidden = Column(Integer, primary_key=False)
Index(u'locations_name', Locations.name, unique=0)
Index(u'locations_refers_to', Locations.refers_to, unique=0)


class Logs(DeclarativeBase):
    __tablename__ = 'logs'
    id = Column(Integer, primary_key=True)
    cache_id = Column(Integer, primary_key=False)
    date = Column(Integer, primary_key=False)
    type = Column(Unicode(), primary_key=False)
    finder = Column(Unicode(), primary_key=False)
    finder_id = Column(Integer, primary_key=False)
    log_entry = Column(Unicode(), primary_key=False)
    log_entry_encoded = Column(Integer, primary_key=False)
    my_log = Column(Integer, primary_key=False)
    my_log_found = Column(Integer, primary_key=False)
    my_log_uploaded = Column(Integer, primary_key=False)
Index(u'logs_cache_id', Logs.cache_id, unique=0)


class Notes(DeclarativeBase):
    __tablename__ = 'notes'
    cache_id = Column(Integer, primary_key=True)
    note = Column(Unicode(), primary_key=False)
Index(u'notes_id', Notes.cache_id, unique=0)


class Photos(DeclarativeBase):
    __tablename__ = 'photos'
    cache_id = Column(Integer, primary_key=True)
    photofile = Column(Unicode(), primary_key=True)
Index(u'photos_id', Photos.cache_id, unique=0)


class Searches(DeclarativeBase):
    __tablename__ = 'searches'
    name = Column(Unicode(), primary_key=True)
    param = Column(Unicode(), primary_key=True)
    value = Column(Unicode(), primary_key=False)
Index(u'searches_name', Searches.name, unique=0)


class TravelBugs(DeclarativeBase):
    __tablename__ = 'travelbugs'
    id = Column(Integer, primary_key=True)
    cache_id = Column(Integer, primary_key=False)
    name = Column(Unicode(), primary_key=False)
    ref = Column(Unicode(), primary_key=False)
Index(u'travelbugs_cache_id', TravelBugs.cache_id, unique=0)


class Version(DeclarativeBase):
    __tablename__ = 'version'
    version = Column(Integer, primary_key=True)


class WatchedWayPoints(DeclarativeBase):
    __tablename__ = 'watched_waypoints'
    waypoint_name = Column(Unicode(), primary_key=True)
